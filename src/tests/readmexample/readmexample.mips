.text                                             # .text
j main                                            # j main
# ====================
# jal call_gcd
# args:
#    $a0: a - i32
#    $a1: b - i32
# return:
#    $v0: i32
# ====================
call_gcd:                                         # fn gcd(a: i32, b: i32) i32{
    # save used s registers to stack
    subiu $sp, $sp, 4                             #     $sp = &$sp[-1]
    sw $ra, 0($sp)                                #     $sp[0] = $ra
                                                  #
    move $t0 $a0                                  #     a = $a0
    move $t1 $a1                                  #     b = $a1
    # body
    bnez $t1, if_end                              #     if b == 0 {
        move $v0 $t0                              #         .      a
        j deinit_gcd                              #         return ^;
    if_end:                                       #     }
    move $a0 $t1                                  #     .               b
    rem $a1, $t0 $t1                              #     |                  a % b
    jal call_gcd                                  #     |           gcd(^, ^^^^^)
    move $v0, $v0                                 #     return$v0 = ^^^^^^^^^^^^^
                                                  #
deinit_gcd:                                       # cleanup:
    # reload used s registers from stack
    lw $ra, 0($sp)                                #     $ra = $sp[0]
    addiu $sp, $sp, 4                             #     $sp = &$sp[1]
jr $ra                                            # }
main:                                             # main:
li $a0 25                                         # .             25
li $a1 15                                         # |                 15
jal call_gcd                                      # |         gcd(^^, ^^)
move $t0, $v0                                     # |         ^^^^^^^^^^^
li $v0 1                                          # print_int(^^^^^^^^^^^)
move $a0 $t0                                      #
syscall                                           #