.text                                    # 
                                         # 
li $t0 25                                # write_int(25);
li $v0 36                                # 
move $a0 $t0                             # 
syscall                                  # 
li $v0 11                                # write_newline();
li $a0, '\n'                             # 
syscall                                  # 
li $s0 10                                # var must_save: u32 = 10;
li $t0 5                                 # var x: u32 = 5;
move $t0 $t0                             # write_int(x);
li $v0 36                                # 
move $a0 $t0                             # 
syscall                                  # 
li $v0 11                                # write_newline();
li $a0, '\n'                             # 
syscall                                  # 
move $t0 $s0                             # write_int(must_save);
li $v0 36                                # 
move $a0 $t0                             # 
syscall                                  # 
li $v0 11                                # write_newline();
li $a0, '\n'                             # 
syscall                                  # 
j print_int_skip_0                       # fn print_int(int: u32) void {
print_int_call_0:                        #     $s0 = 256;
    # save used s registers to stack     #     write_int(int);
    subiu $sp, $sp, 4                    #     write_newline();
    sw $s0, 0($sp)                       # }
    # save args                          # 
    move $t0 $a0                         # 
                                         # 
    # body                               # 
    li $s0 256                           #     $s0 = 256;
    move $t0 $t0                         #     write_int(int);
    li $v0 36                            # 
    move $a0 $t0                         # 
    syscall                              # 
    li $v0 11                            #     write_newline();
    li $a0, '\n'                         # 
    syscall                              # 
                                         # 
    # reload used s registers from stack # 
    lw $s0, 0($sp)                       # 
    addiu $sp, $sp, 4                    # 
jr $ra                                   # 
print_int_skip_0:                        # 
li $s0 10                                # var must_save_2: u32 = 10;
li $a0 6                                 # print_int(6);
jal print_int_call_0                     # 
move $a0 $s0                             # print_int(must_save_2);
jal print_int_call_0                     # 