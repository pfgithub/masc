.text                                             # .text
                                                  #
li $t0 25                                         # .         25
li $v0 36                                         # write_int(^^)
move $a0 $t0                                      #
syscall                                           #
li $v0 11                                         # write_newline()
li $a0, '\n'                                      #
syscall                                           #
li $s0 10                                         # var must_save: u32 = 10
li $t0 5                                          # var x: u32 = 5
li $v0 36                                         # write_int(x)
move $a0 $t0                                      #
syscall                                           #
li $v0 11                                         # write_newline()
li $a0, '\n'                                      #
syscall                                           #
li $v0 36                                         # write_int(must_save)
move $a0 $s0                                      #
syscall                                           #
li $v0 11                                         # write_newline()
li $a0, '\n'                                      #
syscall                                           #
# ====================
# jal call_print_int
# args:
#    $a0: int - u32
# return: none
# ====================
call_print_int:                                   # fn print_int(int: u32) void{
    # save used s registers to stack
    subiu $sp, $sp, 8                             #     $sp = &$sp[-2]
    sw $s0, 0($sp)                                #     $sp[0] = $s0
    sw $ra, 4($sp)                                #     $sp[1] = $ra
                                                  #
    # body
    li $s0 256                                    #     $s0 = 256
    move $t0 $a0                                  #     .         int
    li $v0 36                                     #     write_int(^^^)
    move $a0 $t0                                  #
    syscall                                       #
    li $v0 11                                     #     write_newline()
    li $a0, '\n'                                  #
    syscall                                       #
                                                  #
    # reload used s registers from stack
    lw $s0, 0($sp)                                #     $s0 = $sp[0]
    lw $ra, 4($sp)                                #     $ra = $sp[1]
    addiu $sp, $sp, 8                             #     $sp = &$sp[2]
jr $ra                                            # }
li $s0 10                                         # var must_save_2: u32 = 10
li $a0 6                                          # .                             6
jal call_print_int                                # %%:register:v0:%% = print_int(^)
move $a0 $s0                                      # .                             must_save_2
jal call_print_int                                # %%:register:v0:%% = print_int(^^^^^^^^^^^)